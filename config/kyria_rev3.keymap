/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/* Layer name definitions. Top-to-bottom definition starting at zero and increasing by one.
 * See: https://github.com/zmkfirmware/zmk/issues/1284 for clarification.
 */

#define DEFAULT 0
#define QWERTY 1
#define LOWER 2
#define RAISE 3
#define ADJUST 4

&led_strip {
    chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
};

/ {
    conditional_layers {
      compatible = "zmk,conditional-layers";
      adjust_layer {
        if-layers = <LOWER RAISE>;
        then-layer = <ADJUST>;
      };
    };

    keymap {
        compatible = "zmk,keymap";

        DEFAULT {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  F   |  P   |  B   |                                        |  J   |  L    |  U    |  Y   |   ;   | BSPC |
            // |  TAB  |  A  |  R  |  S   |  T   |  G   |                                        |  M   |  N    |  E    |  I   |   O   |   '  |
            // | SHIFT |  Z  |  X  |  C   |  D   |  V   | L SHIFT | RAISE |    | RAISE | L SHIFT |  K   |  H    |  ,    |  .   |   /   | RET  |
            //                     | GUI  | DEL  | RET  |  SPACE  | LOWER |    | RET   |  SPACE  | TAB  | BSPC  | R-ALT |
            bindings = <
            &kp ESC   &kp Q &kp W &kp F    &kp P   &kp B                                               &kp J   &kp L    &kp U     &kp Y   &kp SEMI &kp BSPC
            &kp TAB   &kp A &kp R &kp S    &kp T   &kp G                                               &kp M   &kp N    &kp E     &kp I   &kp O    &kp SQT
            &kp LSHFT &kp Z &kp X &kp C    &kp D   &kp V   &kp LSHFT &mo RAISE     &mo RAISE &kp LSHFT &kp K   &kp H    &kp COMMA &kp DOT &kp FSLH &kp RET
                                  &kp LGUI &kp DEL &kp RET &kp SPACE &kp LOWER     &kp RET   &kp SPACE &kp TAB &kp BSPC &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        QWERTY {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   | BSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | RAISE |    | LAYER 1 | L SHIFT |  N   |  M    |  ,    |  .   |   /   | RET  |
            //                     | GUI  | DEL  | RET  |  SPACE  | LOWER |    |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |
            bindings = <
            &kp ESC   &kp Q &kp W &kp E    &kp R   &kp T                                               &kp Y   &kp U    &kp I     &kp O   &kp P    &kp BSPC
            &kp TAB   &kp A &kp S &kp D    &kp F   &kp G                                               &kp H   &kp J    &kp K     &kp L   &kp SEMI &kp SQT
            &kp LSHFT &kp Z &kp X &kp C    &kp V   &kp B   &kp LSHFT &mo RAISE     &mo RAISE &kp LSHFT &kp N   &kp M    &kp COMMA &kp DOT &kp FSLH &kp RET
                                  &kp LGUI &kp DEL &kp RET &kp SPACE &mo LOWER     &kp RET   &kp SPACE &kp TAB &kp BSPC &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        LOWER {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   | BSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | LAYER 1 | L SHIFT |  N   |  M    |  ,    |  .   |   /   | RET  |
            //                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |
            bindings = <
            &kp ESC   &kp Q &kp W &kp E &kp R &kp T                                                  &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
            &kp TAB   &kp A &kp S &kp D &kp F &kp G                                                  &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
            &kp LSHFT &kp Z &kp X &kp C &kp V &kp B &kp LSHFT &kp LSHFT            &mo 1   &kp LSHFT &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RET
                                  &kp LGUI &kp DEL &kp RET &kp SPACE &kp ESC       &kp RET &kp SPACE &kp TAB &kp BSPC &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        RAISE {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   | BSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | LAYER 1 | L SHIFT |  N   |  M    |  ,    |  .   |   /   | RET  |
            //                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |
            bindings = <
            &kp ESC   &kp Q &kp W &kp E &kp R &kp T                                                  &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
            &kp TAB   &kp A &kp S &kp D &kp F &kp G                                                  &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
            &kp LSHFT &kp Z &kp X &kp C &kp V &kp B &kp LSHFT &kp LSHFT            &mo 1   &kp LSHFT &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RET
                                  &kp LGUI &kp DEL &kp RET &kp SPACE &kp ESC       &kp RET &kp SPACE &kp TAB &kp BSPC &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
        ADJUST {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |       |QWERTY|BT_CLR|BTSEL0|BTSEL1 |BTSEL2|                                         |      |      |      |      |      |      |
            // |       |      |      |BTSEL3|DEFAULT|      |                                         |      |      |      |      |      |      |
            // |       |      |      |      |       |      |      |      |      |      |      |      |      |      |      |      |      |      |
            //                       |      |       |      |      |      |      |      |      |      |      |      |      |
            bindings = <
            &trans &to QWERTY &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2                &trans &trans &trans &trans &trans &trans
            &trans &trans     &trans     &bt BT_SEL 3 &to DEFAULT  &trans                      &trans &trans &trans &trans &trans &trans
            &trans &trans     &trans &trans &trans &trans &trans   &trans        &trans &trans &trans &trans &trans &trans &trans &trans
                                     &trans &trans &trans &trans   &trans        &trans &trans &trans &trans &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
